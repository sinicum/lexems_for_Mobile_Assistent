//------- Маршрутный лист /getRoutesList 
//------- сделан приближённо к шаблону отчета "Маршрутный лист"
begin(patID, RoutesList, selEmergEvent, routeRecords, Route, RouteRes, EmergEventID ,status, err)

    try 
    begin()
        
        @patID := @querystring["patId"]; // 4e6de5f7-4dc9-451b-bf0d-7a64a9b8c279
        @status := 200;
        

        //$throw(@patSNILS[0][0]);
        @RoutesList := new MP.ROUTES_LIST();


        if(@patID<>Null() and @patID<>"") //----- ПАРАМЕТР patId УКАЗАН-----
        begin()

            @selEmergEvent := select top 1 {EventID},{EventDate},{AmbulanceCard / CardLpu / Name}
                        from "AKUZ.EMERGENCY_EVENT" 
                        where {AmbulanceCard / Patient / PatientID} = @patID
                        order by {EventDate} desc;
            // @qrEmergEvent := query top 1 {EventID}
            //             from "AKUZ.EMERGENCY_EVENT" 
            //             where {AmbulanceCard / Patient / PatientID} = @patID
            //             order by {EventDate} desc;

            if(@selEmergEvent->Count()>0) //----- НАЙДЕН ЛИ СЛУЧАЙ ------//
            begin()


                // ============== JSON структура  ==============
                // {
                //     "EventID": "guid",
                //     "EventDate": "dd-MM-yyyy",
                //     "Routes": [ 
                //         {
                //             "Type": "string"                         // Тип ROUTE_TO_DOCTOR_INSPECTION - ко вроачу, ROUTE_TO_DIAGNOSTICS - на исследование
                //             "CreationDateTime": "dd-MM-yyyy HH:mm",  // Дата и время создания
                //             "Name" : "string",                       // Наименование услуги / специальности
                //             "EntryPlace": "string",                  // Кабинет приёма (при наличии записи в расписание)   {EntryAmbulance / Place}
                //             "EntryResName": "string",                // ФИО врача или кабинета полностью (по записи)
                //             "LpuName": "string",                     // Наименование МО
                //             "ResultExits": "string",                 // Исполнение
                //         }
                //     ]
                // }

                //@RoutesList -> {error} := @EmergEventID;// @routeRecords ->Count();

                @EmergEventID := @selEmergEvent[0][0]; // a268e6d7-618c-4b83-97ca-c9dc8b79b55b


                @RoutesList -> {EventID} := @selEmergEvent[0][0] ;
                @RoutesList -> {EventDate} := Str(@selEmergEvent[0][1] ,"yyyy-MM-dd");
                @RoutesList -> {LpuName} := @selEmergEvent[0][2] ;


                @routeRecords := query {MedicalRecordID}
                                        //,{ObjectProperties / ObjectTypeID}
                                        ,{ObjectProperties / ObjectType / EntName}
                                        ,{RouteDate} // Дата  создания
                                        ,{RecordTime}  //  и время создания

                                        ,{As AKUZ.ROUTE_TO_DOCTOR_INSPECTION / Speciality / Name}
                                        ,{As AKUZ.ROUTE_TO_DOCTOR_INSPECTION / Number}

                                        ,{As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / Name}
                                        ,{As AKUZ.ROUTE_TO_DIAGNOSTICS / NumberDirection}
                                        // ,{RouteToDiagnosticsAddInfo / As AKUZ.X_RAY_ADD_INFO / XRayAddParamss/ DiagnosticsDictionary / Name}
                                        // ,{RouteToDiagnosticsAddInfo / As AKUZ.X_RAY_ADD_INFO / XRayAddParamss/ ExaminationArea}
                                        ,{As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / EconomicCode}
                                        ,{As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / Code}

                                        ,{EntryAmbulance / Place}
                                        ,{EntryAmbulance / Resource / DisplayName}
                                        
                                        ,{ResultExits} 

                                        ,{AmbulanceCard / CardLpu / Name}
                                        
                            from "AKUZ.ROUTE_RECORD" 
                            where {AmbulanceEvent / EventID} = @EmergEventID
                                and ({ObjectProperties / ObjectTypeID} IS "AKUZ.ROUTE_TO_DOCTOR_INSPECTION"
                                    or {ObjectProperties / ObjectTypeID} IS "AKUZ.ROUTE_TO_DIAGNOSTICS")
                                ;

                if (@routeRecords->Count()>0 )  //----- НАЙДЕНЫ ЛИ НАЗНАЧЕНИЯ ------//
                foreach(thisRoute in @routeRecords)
                //if(@thisRoute ->{ObjectProperties / ObjectTypeID} IS "AKUZ.ROUTE_TO_DOCTOR_INSPECTION")
                begin()

                    @Route := new MP.ROUTE();
                    @Route->{Type} := @thisRoute ->{ObjectProperties / ObjectType / EntName};
                    @Route->{CreationDateTime} := Str(@thisRoute->{RouteDate},"yyyy-MM-dd") +" "+ Str(@thisRoute->{RecordTime},"HH:mm");

                    @Route->{Name} := IsNull(@thisRoute->{As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / Name}
                        , @thisRoute-> {As AKUZ.ROUTE_TO_DOCTOR_INSPECTION / Speciality / Name} +" ["+ Str(@thisRoute->{As AKUZ.ROUTE_TO_DOCTOR_INSPECTION / Number})+"]"    
                        , @thisRoute-> {As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / Name} +" [" + IsNull(@thisRoute->{As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / EconomicCode}, @thisRoute->{As AKUZ.ROUTE_TO_DIAGNOSTICS / Research / Code})+"]") 
                        ;

                    @Route->{EntryPlace} := "Каб.№" +@thisRoute->{EntryAmbulance / Place}+ " "+ @thisRoute->{EntryAmbulance / Resource / DisplayName};
                    @Route->{ResultExits} := @thisRoute->{ResultExits}; // из атрибута
                    if (@thisRoute->{ResultExits}=True)
                    begin(MedicalRecordID, qrME,qrDR)
                        // Направление к специалисту
                        if(@thisRoute ->{ObjectProperties / ObjectTypeID} IS "AKUZ.ROUTE_TO_DOCTOR_INSPECTION")
                        begin()
                            @MedicalRecordID := @thisRoute -> {MedicalRecordID};
                            @qrME := query top 1 {MedicalRecordID}
                                                ,{Post / Worker / FIO}
                                                ,{Post / Speciality / Name}
                                        from "AKUZ.MEDICAL_EXAMINATION"
                                        where {AmbulanceEvent / EventID} = @EmergEventID 
                                        And ChildExists({Relationships}, {MedicalRecordLink / MedicalRecordID} = @MedicalRecordID)
                                        order by {ExaminationTime};
                            foreach(ME in @qrME)
                            begin()
                                @RouteRes := new MP.ROUTE_RESULT();
                                @RouteRes->{Resource} := @ME -> {Post / Worker / FIO};
                                @RouteRes->{DiagResultId} := @ME -> {MedicalRecordID};
                            end;
                        end else
                        // Направление на услугу
                        if(@thisRoute ->{ObjectProperties / ObjectTypeID} IS "AKUZ.ROUTE_TO_DIAGNOSTICS")
                        begin()
                            @MedicalRecordID := @thisRoute -> {MedicalRecordID};
                            @qrDR := query top 1 {MedicalRecordID}
                                                ,{Post / Worker / FIO}
                                                ,{Post / Speciality / Name}
                                        from "AKUZ.DIAGNOSTICS_RESULTS"
                                        where {AmbulanceEvent / EventID} = @EmergEventID 
                                        And ChildExists({Relationships}, {MedicalRecordLink / MedicalRecordID} = @MedicalRecordID)
                                        order by {RecordTime};
                            foreach(DR in @qrDR)
                            begin()
                                @RouteRes := new MP.ROUTE_RESULT();
                                @RouteRes->{Resource} := @DR -> {Post / Worker / FIO};
                                @RouteRes->{DiagResultId} := @DR -> {MedicalRecordID};
                            end;
                        end;
                    end;
                    

                    //@Route->{LpuName} := @thisRoute ->{AmbulanceCard / CardLpu / Name};


                    @RoutesList->{Routes} -> Add(@Route);
                    //@RoutesList->{error} := Str(@ELN,"Json");

                end
                else
                begin()
                    @status:=206;
                    @RoutesList->{error} := "Не найдены направления по указанному patId";
                end;
            end
            else
            begin()
                @status:=206;
                @RoutesList->{error} := "Не найдены случаи по указанному patId";
            end;

        end else 
        begin()
            @status:=206;
            @RoutesList->{error} := "Не указан параметр patId";
        end;

        //@RoutesList->{error} := @routeRecords->Count();
        
        @response.StatusCode:=@status;
        return(@RoutesList);
    end
    catch(ex)
    begin()

        @status:=500;
        @response.StatusCode:=@status;
        // @ex := IsNull(@ex->{InnerException}->{InnerException}->{InnerException}->{InnerException},
        //         IsNull(@ex->{InnerException}->{InnerException}->{InnerException},
        //         IsNull(@ex->{InnerException}->{InnerException},
        //         IsNull(@ex->{InnerException},@ex))));

        @err := @ex->{InnerException};
        while (RegExMatch("--> ", @err, "All")->Count()>0 )
            @err := SubString(@err,IndexOf(@err,"--> ")+4,StringLen(@err));

        @RoutesList->{error} := SubString(@err,IndexOf(@err,":")+2,IndexOf(@err,Char(13))-IndexOf(@err,":")-2 );

        return(@RoutesList);

    end;
end