// ЭЛН (Больничные листы)	/getELNs
begin(patID, patSNILS, ELNsMain, ELN, ELNprlngtion, qrMedCerts,MedCertProlongs,status)

    try 
    begin()
        
        @patID := @querystring["patId"];
        @status := 200;
        @patSNILS := select {SNILS / SnilsID} from "AKUZ.PATIENT" where {PatientID} = @patID;

        //$throw(@patSNILS[0][0]);
        @ELNsMain := new MP.MED_CERTS_LIST();


        if(@patID<>Null() and @patID<>"") 
        begin()

            // if (RegularExpression("^[0-9]{3}-[0-9]{3}-[0-9]{3} [0-9]{2}$", @snils) > 0 and @snils<>"000-000-000 00") 
            if (@patSNILS[0][0] <>Null()) 
            begin()
                @patSNILS := Substring(@patSNILS[0][0],0,3)+Substring(@patSNILS[0][0],4,3) +Substring(@patSNILS[0][0],8,3) +Substring(@patSNILS[0][0],12,2)
            end
            else $throw("НЕ НАЙДЕН СНИЛС");

            //------- MEDICAL_CERTIFICATE -------//
            @qrMedCerts := query {AmbulanceCard / Patient / SNILS / SnilsID}
                                ,{CertificateNumber}
                                ,{OpenDate}
                                ,{MedicalCertificateClose / DateClose}
                                ,{MedicalCertificateClose / WorkDate}
                                ,{DaysCount}
                                ,{MedicalCertificatesCauses / Name}
                                
                                ,{MedicalCertificateProlongations / ProlongationStartDate}
                                ,{MedicalCertificateProlongations / ProlongationDate}
                                ,{MedicalCertificateProlongations / Post / Worker/FIO}
                                ,{MedicalCertificateProlongations / Post / Speciality / Name}

                                ,{CardLpuName}
                                ,{BranchAddressString}


                                ,{FssLnStatus}
                                ,{SentSNILS}

                from "AKUZ.MEDICAL_CERTIFICATE" where {SentSNILS} = @patSNILS //where {AmbulanceCard / Patient / PatientID} = @patID 
                    and ({FssLnStatus} = 10     // ЭЛН открыт
                        Or {FssLnStatus} = 20   // ЭЛН продлен
                        Or {FssLnStatus} = 30   // ЭЛН закрыт
                        Or {FssLnStatus} = 40   // ЭЛН направление на МСЭ
                        Or {FssLnStatus} = 50   // ЭЛН дополнен данными МСЭ
                        )
                order by {OpenDate};


            // ============== JSON структура  ==========
            //{
            //    "PatientELNs": [ 
            //        {
            //            "PatientSNILS":"string"           // СНИЛС болеющего
            //            "Number": "String"                // Номер листа нетрудоспособности
            //            "OpenDate": "dd-MM-yyyy",         // Дата открытия
            //            "DateClose": "dd-MM-yyyy",        // Дата закрытия
            //  //          "ProlongationDate": "dd-MM-yyyy", // Дата продления до
            //            "WorkDate": "dd-MM-yyyy",         // Дата выхода на работу
            //            "DaysCount" : Int,                // Количество дней нетрудоспособности
            //            "Cause": "string",               // Причина нетрудоспособности
            //            "Prolongations", [                // Продления
            //                "StartDate": "dd-MM-yyyy",        // Дата продления с
            //                "ProlongationDate": "dd-MM-yyyy", // Дата продления до
            //                "Post": "dd-MM-yyyy",             // Врач
            //            ]
            //            "LpuName": "string",              // Наименование МО
            //            "BranchAddress" : "string",       // Адресс СП МО
            //            "FssLnStatus": "10",
            //            "SentSNILS": "00000060001"
            //        }
            //    ]
            //}


            if (@qrMedCerts->Count()>0 )  //----- НАЙДЕНЫ ЛИ ЭЛН ------//
            foreach(thisMedCert in @qrMedCerts)
            begin()

                @ELN := new MP.MED_CERT();
                @ELN->{PatientSNILS} := @thisMedCert ->{AmbulanceCard / Patient / SNILS / SnilsID};
                @ELN->{Number} := @thisMedCert ->{CertificateNumber};
                @ELN->{OpenDate} := Str(@thisMedCert->{OpenDate},"yyyy-MM-dd");
                //if(@thisMedCert->{MedicalCertificateClose / DateClose}= Null() ) @ELN->{ProlongationDate} := Str(@thisMedCert->ChildCount({MedicalCertificateProlongations}, First({ProlongationDate}), Null(), {ProlongationDate}, "desc"),"yyyy-MM-dd");
                //if(@thisMedCert->{MedicalCertificateClose / DateClose}= Null() ) @ELN->{ProlongationDate} := Str(@thisMedCert->ChildCount({MedicalCertificateProlongations}, First({ProlongationStartDate}), Null(), {ProlongationStartDate}, "desc"),"yyyy-MM-dd");
                if(@thisMedCert->{MedicalCertificateClose / DateClose}<>Null() ) @ELN->{DateClose}:= Str(@thisMedCert->{MedicalCertificateClose / DateClose},"yyyy-MM-dd");
                if(@thisMedCert->{MedicalCertificateClose / WorkDate}<>Null()  ) @ELN->{WorkDate} := Str(@thisMedCert->{MedicalCertificateClose / WorkDate},"yyyy-MM-dd");
                @ELN->{DaysCount} := @thisMedCert ->{DaysCount};
                @ELN->{Cause} := @thisMedCert->{MedicalCertificatesCauses / Name};
                
                @MedCertProlongs := @thisMedCert ->{MedicalCertificateProlongations};
                foreach(thisProlong in @MedCertProlongs)
                begin()

                    @ELNprlngtion := new MP.MED_CERT_PROLONGATION(); 
                    
                    @ELNprlngtion -> {StartDate} := Str(@thisProlong ->{ProlongationStartDate},"yyyy-MM-dd");
                    if(@thisProlong ->{ProlongationDate}<>Null()) @ELNprlngtion -> {ProlongationDate} := Str(@thisProlong ->{ProlongationDate},"yyyy-MM-dd");
                    @ELNprlngtion -> {Post} := @thisProlong ->{Post / DisplayName};

                    @ELN->{Prolongations} -> Add(@ELNprlngtion);
                end;
                @ELN->{LpuName} := @thisMedCert ->{CardLpuName};
                @ELN->{BranchAddress} := @thisMedCert ->{BranchAddressString};
                @ELN->{FssLnStatus} := Str(@thisMedCert ->{FssLnStatus});
                @ELN->{SentSNILS} := @thisMedCert ->{SentSNILS};


                @ELNsMain->{PatientELNs} -> Add(@ELN);
                //@ELNsMain->{error} := Str(@ELN,"Json");

            end
            else
            begin()
                @status:=206;
                @ELNsMain->{error} := "Не найдены ЭЛН по указанному patId";
            end;

        end else 
        begin()
            @status:=206;
            @ELNsMain->{error} := "Не указан параметр patId";
        end;

        //@ELNsMain->{error} := IsNull(@patSNILS[0][0],"");
        
        @response.StatusCode:=@status;
        return(@ELNsMain);
    end
    catch(ex)
    begin()

        // @ex := IsNull(@ex->{InnerException}->{InnerException}->{InnerException}->{InnerException},
        //         IsNull(@ex->{InnerException}->{InnerException}->{InnerException},
        //         IsNull(@ex->{InnerException}->{InnerException},
        //         IsNull(@ex->{InnerException},@ex))));
    
        @status:=500;
        @response.StatusCode:=@status;
        @ELNsMain->{error} :=  @ex-> {InnerException};//  Str(@ELN,"Json");
        return(@ELNsMain);

    end;
end
