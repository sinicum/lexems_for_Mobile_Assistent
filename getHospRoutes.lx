// Направления по текущей госпитализации. Медтод /getHospRoutes
begin(patID, InfoList, qrEmergEvent ,status)

    //declare MP.INFO_LIST(RoutesToDiagnostic:MP.ROUTE_TO_DIAGNOSTIC[Collection4],RoutesToDoctor:MP.ROUTE_TO_DOCTOR[Collection5],Recomendations:MP.RECOM[Collection6],error:string); 
    //declare MP.ROUTE_TO_DIAGNOSTIC(Collection4:MP.INFO_LIST,RouteDate:string,ResearchCode:string,ResearchName:string);
    //declare MP.ROUTE_TO_DOCTOR(Collection5:MP.INFO_LIST,RouteDate:string,SpecialityCode:string,SpecialityName:string);
    //declare MP.RECOM(Collection6:MP.INFO_LIST,Recomendation:string);

    //{
    //    "RoutesToDiagnostic": [
    //        {
    //            "RouteDate": "10.07.2025",
    //            "ResearchCode": "A06.04.011",
    //            "ResearchName": "Рентгенография бедренного сустава"
    //        }
    //    ],
    //    "RoutesToDoctor": [
    //        {
    //            "RouteDate": "17.07.2025",
    //            "SpecialityCode": "013",
    //            "SpecialityName": "Кардиолог"
    //        }
    //    ]
    //}
    
    @status := 200;
    @InfoList := new MP.INFO_LIST();
    @patID := TryCast(@querystring["patId"], "Guid");
    //@patID :="b708e782-4f83-4f3b-8639-512c0c9637bf"; //выписан
    //@patID :="3092e1c5-e08b-4654-a027-82be90fe8a49";
    if (str(@patID)<>"")
    begin()
        @qrEmergEvent := query top 1 {EventID},{MedicalExaminations / Recomendations} 
                    from "AKUZ.EMERGENCY_EVENT" 
                    where {AmbulanceCard / Patient / PatientID} = @patID and {CloseDate} = Null()
                    order by {CreationDateTime} desc
                    ;                        
        if (@qrEmergEvent -> Count()>0)
        begin(EventID)
            @EventID := @qrEmergEvent[0] -> {EventID};
            //Направления на диагностику

            begin(qrRouteToDiag)
                @qrRouteToDiag := (query {Research / Code}
                ,{Research / Name}
                ,{RouteDate}
                from "AKUZ.ROUTE_TO_DIAGNOSTICS"
                where {AmbulanceEvent / EventID} = @EventID 
                order by {RouteDate});

                if (@qrRouteToDiag -> Count()>0)
                foreach(thisqrRouteToDiag in @qrRouteToDiag)
                begin(Route_Diag)
                    @Route_Diag := new MP.ROUTE_TO_DIAGNOSTIC();
                    @Route_Diag -> {RouteDate} := @thisqrRouteToDiag -> str({RouteDate},"dd.MM.yyyy");
                    @Route_Diag -> {ResearchCode} := @thisqrRouteToDiag -> {Research / Code};                            
                    @Route_Diag -> {ResearchName} := @thisqrRouteToDiag -> {Research / Name};
                    @InfoList -> {RoutesToDiagnostic} -> Add(@Route_Diag);
                end
                else
                begin()
                    @status:=206;
                    @ELNsMain->{error} := "Не найдены направления на диагностику по указанному patId";
                end;
            end;
            //Направления на консультацию/специалисту
            begin(qrRouteToDoctor)
                @qrRouteToDoctor := (query {Speciality / Code}
                ,{Speciality / Name}
                ,{RouteDate}
                from "AKUZ.ROUTE_TO_DOCTOR_INSPECTION"
                where {AmbulanceEvent / EventID} = @EventID 
                order by {RouteDate});
                foreach(thisqrRouteToDoctor in @qrRouteToDoctor)
                begin(Route_Doctor)
                    @Route_Doctor := new MP.ROUTE_TO_DOCTOR();
                    @Route_Doctor -> {RouteDate} := @thisqrRouteToDoctor -> str({RouteDate},"dd.MM.yyyy");
                    @Route_Doctor -> {SpecialityCode} := @thisqrRouteToDoctor -> {Speciality / Code};                            
                    @Route_Doctor -> {SpecialityName} := @thisqrRouteToDoctor -> {Speciality / Name};
                    @InfoList -> {RoutesToDoctor} -> Add(@Route_Doctor);
                end;
            end; 
        end                   
        else
        begin()
            @InfoList -> {error} := "Пациент не госпитализирован!";
            @status := 206;
        end;
    end
    else
        begin()
            @InfoList -> {error} := "Идентификатор пациента указан неверно";
            @status := 206;        
        end;
    
    @InfoList := Replace(Str(@InfoList,"Json"),"\"flags_\":\"1\",","");
    // print(@InfoList);
    return(@InfoList);     

    @response.StatusCode:=@status; 
end;