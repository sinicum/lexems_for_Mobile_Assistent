// Посещения врачей по текущей госпитализации. Медтод /getHospExaminations
begin(patID, HospExamsList, qrEmergEvent ,status)

    //declare MP.INFO_LIST(RoutesToDiagnostic:MP.ROUTE_TO_DIAGNOSTIC[Collection4],RoutesToDoctor:MP.ROUTE_TO_DOCTOR[Collection5],Recomendations:MP.RECOM[Collection6],error:string); 
    //declare MP.ROUTE_TO_DIAGNOSTIC(Collection4:MP.INFO_LIST,RouteDate:string,ResearchCode:string,ResearchName:string);
    //declare MP.ROUTE_TO_DOCTOR(Collection5:MP.INFO_LIST,RouteDate:string,SpecialityCode:string,SpecialityName:string);
    //declare MP.RECOM(Collection6:MP.INFO_LIST,Recomendation:string);

    // {
    //     "EventID": "b8227793-0f40-40f0-b8aa-9fc00cc13b96",
    //     "EventDate": "2025-07-21"
    //     "Exams": [
    //         {
    //             "Recommendation": "рекомендации тест"
    //         }
    //     ]
    // }
    try
    begin()
        @status := 200;
        @HospExamsList := new MP.HOSP_EXAMS_LIST();
        @patID := TryCast(@querystring["patId"], "Guid");

        if (str(@patID)<>"")
        begin()
            @qrEmergEvent := query top 1 {EventID},{EventDate}
                                        ,{MedicalExaminations / Recomendations}
                                        ,{MedicalExaminations / ExaminationDate}
                                        ,{MedicalExaminations / ExaminationTime}

                        from "AKUZ.EMERGENCY_EVENT" 
                        where {AmbulanceCard / Patient / PatientID} = @patID and {CloseDate} = Null()
                        order by {CreationDateTime} desc
                        ;
            if (@qrEmergEvent -> Count()>0)
            begin(EventID)
                @EventID := @qrEmergEvent[0] -> {EventID};
                @HospExamsList -> {EventID} := @qrEmergEvent[0] -> {EventID};
                @HospExamsList -> {EventDate} := Str(@qrEmergEvent[0] -> {EventDate},"yyyy-MM-dd");

                //Рекомендации из Осмотров
                foreach(thisqrEmergEvent in @qrEmergEvent)
                begin()
                    foreach(ME in @thisqrEmergEvent->{MedicalExaminations})
                    // if (str(@ME -> {Recomendations})<>"")
                    begin(Recom)
                        @Recom := new MP.EXAMINATION();
                        @Recom -> {Type} := "Осмотр";
                        @Recom -> {DateTime} := str(Cast(Str(@ME->{MedicalExaminations / ExaminationDate},"yyyy-MM-dd")+ " "+ Str(@ME->{MedicalExaminations / ExaminationTime},"HH:mm:ss"), "DateTime"));
                        @Recom -> {Recommendation} := str(@ME -> {Recomendations});
                        @HospExamsList -> {Recommendations} -> Add(@Recom);
                    end;
                end;



            end                   
            else
            begin()
                @HospExamsList -> {error} := "Пациент не госпитализирован!";
                @status := 206;
            end;
        end
        else
        begin()
            @HospExamsList -> {error} := "Идентификатор пациента указан неверно";
            @status := 206;        
        end;
        
        @HospExamsList := Replace(Str(@HospExamsList,"Json"),"\"flags_\":\"1\",","");
        // print(@HospExamsList);
        return(@HospExamsList);

        @response.StatusCode:=@status;

    end
    catch(ex)
    begin()

        @HospExamsList->{error} :=  @ex-> {InnerException};//  Str(@ELN,"Json");
        @response.StatusCode := 500;
        return(@HospExamsList);

    end;
end;